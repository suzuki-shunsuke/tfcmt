"use strict";(globalThis.webpackChunktfcmt=globalThis.webpackChunktfcmt||[]).push([[79],{5680:(e,t,r)=>{r.d(t,{xA:()=>s,yg:()=>f});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach(function(t){a(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},s=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef(function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),g=i(r),m=a,f=g["".concat(l,".").concat(m)]||g[m]||c[m]||o;return r?n.createElement(f,u(u({ref:t},s),{},{components:r})):n.createElement(f,u({ref:t},s))});function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,u=new Array(o);u[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[g]="string"==typeof e?e:a,u[1]=p;for(var i=2;i<o;i++)u[i]=r[i];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8908:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var n=r(8168),a=(r(6540),r(5680));const o={sidebar_position:575},u="Terragurnt Support",p={unversionedId:"terragrunt",id:"terragrunt",title:"Terragurnt Support",description:"Terragrunt is a thin wrapper that provides extra tools for keeping your configurations DRY, working with multiple Terraform modules, and managing remote state.",source:"@site/docs/terragrunt.md",sourceDirName:".",slug:"/terragrunt",permalink:"/tfcmt/terragrunt",draft:!1,editUrl:"https://github.com/suzuki-shunsuke/tfcmt-docs/edit/main/docs/terragrunt.md",tags:[],version:"current",sidebarPosition:575,frontMatter:{sidebar_position:575},sidebar:"tutorialSidebar",previous:{title:"Output the result to a local file",permalink:"/tfcmt/output-file"},next:{title:"Command Usage",permalink:"/tfcmt/usage"}},l={},i=[{value:"Failed to parse the output of Terragrunt",id:"failed-to-parse-the-output-of-terragrunt",level:2},{value:"terragrunt run-all",id:"terragrunt-run-all",level:2}],s={toc:i},g="wrapper";function c({components:e,...t}){return(0,a.yg)(g,(0,n.A)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"terragurnt-support"},"Terragurnt Support"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://terragrunt.gruntwork.io/"},"Terragrunt")," is a thin wrapper that provides extra tools for keeping your configurations DRY, working with multiple Terraform modules, and managing remote state."),(0,a.yg)("h2",{id:"failed-to-parse-the-output-of-terragrunt"},"Failed to parse the output of Terragrunt"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/tfcmt/issues/1972"},"#1972"),"\n",(0,a.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/tfcmt/issues/1541"},"#1541")),(0,a.yg)("p",null,"By default, tfcmt can't parse the output of Terragrunt.\nThis isn't a bug.\nThe log of terragrunt includes the prefix ",(0,a.yg)("inlineCode",{parentName:"p"},"timestamp STDOUT terraform:"),"."),(0,a.yg)("p",null,"e.g."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"09:32:46.963 STDOUT terraform: data.aws_caller_identity.current: Reading...\n09:32:46.963 STDOUT terraform: module.cwlogs1.aws_cloudwatch_log_group.this: Refreshing state... [id=test-2]\n09:32:47.088 STDOUT terraform:\n")),(0,a.yg)("p",null,"Due to the prefix, tfcmt can't parse the output.\nYou can suppress the preifx by the environment variable `TERRAGRUNT_LOG_DISABLE=true, then tfcmt can parse the output."),(0,a.yg)("h2",{id:"terragrunt-run-all"},"terragrunt run-all"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/tfcmt/discussions/843"},"#843"),"\n",(0,a.yg)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/tfcmt/issues/1923"},"#1923")),(0,a.yg)("p",null,"Terragrunt supports deploying multiple Terraform modules in a single command by ",(0,a.yg)("a",{parentName:"p",href:"https://terragrunt.gruntwork.io/docs/features/execute-terraform-commands-on-multiple-modules-at-once/#the-run-all-command"},"terragrunt run-all command"),", but tfcmt doesn't support the output."),(0,a.yg)("p",null,"\u274c This doesn't work."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"tfcmt plan -- terragrunt run-all plan\n")),(0,a.yg)("p",null,"You can solve the issue by Terragrunt's ",(0,a.yg)("a",{parentName:"p",href:"https://terragrunt.gruntwork.io/docs/reference/cli-options/#terragrunt-tfpath"},"--terragrunt-tfpath")," option."),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Create a wrapper script of ",(0,a.yg)("inlineCode",{parentName:"li"},"terraform")," and make it executable")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"vi tfwrapper.sh\nchmod a+x tfwrapper.sh\n")),(0,a.yg)("p",null,"tfwrapper.sh"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},'#!/bin/bash\n\nset -euo pipefail\n\ncommand=$1\n\nbase_dir=$(git rev-parse --show-toplevel) # Please fix if necessary\ntarget=${PWD#"$base_dir"/}\n\nif [ "$command" == "plan" ]; then\n  tfcmt -var "target:${target}" plan -- terraform "$@"\nelif [ "$command" == "apply" ]; then\n  tfcmt -var "target:${target}" apply -- terraform "$@"\nelse\n  terraform "$@"\nfi\n')),(0,a.yg)("ol",{start:2},(0,a.yg)("li",{parentName:"ol"},"Run ",(0,a.yg)("inlineCode",{parentName:"li"},"terragrunt plan --all")," with ",(0,a.yg)("inlineCode",{parentName:"li"},"--tf-path"))),(0,a.yg)("p",null,"Latest Terragrunt (",(0,a.yg)("inlineCode",{parentName:"p"},">= 0.85.0"),")"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},'terragrunt plan --all --tf-path "<absolute path of tfwrapper.sh>"\n')),(0,a.yg)("p",null,"Old Terragrunt: (",(0,a.yg)("inlineCode",{parentName:"p"},"< 0.85.0"),")"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},'terragrunt run-all plan --terragrunt-tfpath "<absolute path of tfwrapper.sh>"\n')),(0,a.yg)("p",null,"Then the result of ",(0,a.yg)("inlineCode",{parentName:"p"},"terraform plan")," is posted per module."))}c.isMDXComponent=!0}}]);